services:
  web:
    container_name: ecs_backend
    build: ./ecommerce-solutions
    command: gunicorn ecs.wsgi:application --config gunicorn.py
    volumes:
      - 'static_volume:/home/backend/staticfiles'
      - 'media_volume:/home/backend/mediafiles'
      - './ecommerce-solutions/:/backend'
      - './ecommerce-solutions/logs:/home/backend/logs'
    expose:
      - 8000
    restart: on-failure

    environment:
      - DEBUG=0
      - CONN_MAX_AGE=20
      - SECRET_KEY=key
      - DJANGO_SETTINGS_MODULE=ecs.prod
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
      - DJANGO_SUPERUSERNAME=acsolotltd
      - DJANGO_SUPERUSER_EMAIL=acsolotltd@gmail.com
      - DJANGO_SUPERUSER_PASSWORD=acsolotltd
      - POSTGRES_USER=ecs
      - POSTGRES_PASSWORD=ecommerce-solutions
      - POSTGRES_DB=ecs
      - POOL_MIN_SIZE=2
      - POOL_MAX_SIZE=4
      - POOL_TIMEOUT=20
      - SQL_ENGINE=django.db.backends.postgresql
      - SQL_DATABASE=ecs
      - SQL_USER=ecs
      - SQL_PASSWORD=ecommerce-solutions
      - SQL_HOST=db
      - SQL_PORT=5432
      - DATABASE=postgres
      - AWS_ACCESS_KEY_ID=
      - AWS_SECRET_ACCESS_KEY=
      - AWS_STORAGE_BUCKET_NAME=megadey
      - AWS_S3_SIGNATURE_VERSION=s3v4
      - AWS_S3_REGION_NAME=us-east-1
      - STATIC_LOCATION=static
      - AWS_S3_FILE_OVERWRITE=0
      - AWS_LOCATION=static
      - AWS_S3_VERIFY=1
      - EMAIL_USE_TLS=1
      - EMAIL_HOST=smtp.sendgrid.net
      - EMAIL_HOST_USER=apikey
      - EMAIL_HOST_PASSWORD=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
      - EMAIL_PORT=587
      - DEFAULT_FROM_EMAIL=mail@megadey.org

    depends_on:
      db:
        condition: service_healthy
    
  frontend_nginx:
    container_name: ecs_frontend_nginx
    image: nginx:alpine
    ports:
      - 80:80
    volumes:
      - ./frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf
    
    depends_on:
      - frontend

  frontend:
    container_name: ecs_frontend
    build: ./frontend
    ports:
      - 3000:80

    volumes:
      - ./frontend:/app
    depends_on:
      - web
    environment:
      - NODE_ENV=production
      - BACKEND_API_ENDPOINT=http://127.0.0.1/api/

  nginx_backend:
    build: ./ecommerce-solutions/nginx
    container_name: nginx_backend
    ports:
      - 8000:80
    volumes:
      - 'static_volume:/home/backend/staticfiles'
      - 'media_volume:/home/backend/mediafiles'
      
    depends_on:
      - web 
  db:
    container_name: ecs_database
    image: postgres:16.0-alpine
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "ecs" ]
      interval: 5s
      timeout: 5s
      retries: 5
    
    ports:
      - "5432:5432"
    volumes:
      - 'db_data:/var/lib/postgresql/data/'

  redis:
    image: "redis:alpine"
    

volumes:
  db_data:
  static_volume:
  media_volume: