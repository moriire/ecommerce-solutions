services:
  ecs_web:
    image: moriire/ecommerce-solutions:ecs_backend
    build: ./ecommerce-solutions
    entrypoint: ./ecommerce-solutions/server-entry
    volumes:
      - 'static_volume:/home/backend/staticfiles'
      - 'media_volume:/home/backend/mediafiles'
      - './ecommerce-solutions/:/backend'
      - './ecommerce-solutions/logs:/home/backend/logs'
    expose:
      - 8000
    restart: on-failure

    environment:
      - DJANGO_SUPERUSER_EMAIL
      - DJANGO_SUPERUSER_USERNAME
      - DJANGO_SUPERUSER_PASSWORD
      - DEBUG=1
      - CONN_MAX_AGE
      - SECRET_KEY
      - DJANGO_SETTINGS_MODULE
      - DJANGO_ALLOWED_HOSTS
      - DJANGO_SUPERUSERNAME
      - DJANGO_SUPERUSER_EMAIL
      - DJANGO_SUPERUSER_PASSWORD
      - CELERY_BROKER_URL="redis://redis:6379/0"
      - CELERY_RESULT_BACKEND="redis://redis:6379/0"
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - AWS_STORAGE_BUCKET_NAME
      - AWS_S3_SIGNATURE_VERSION
      - AWS_S3_REGION_NAME
      - STATIC_LOCATION
      - AWS_S3_FILE_OVERWRITE
      - AWS_LOCATION
      - AWS_S3_VERIFY
      - EMAIL_USE_TLS
      - EMAIL_HOST
      - EMAIL_HOST_USER
      - EMAIL_HOST_PASSWORD
      - EMAIL_PORT
      - DEFAULT_FROM_EMAIL

    depends_on:
      ecs_db:
        condition: service_healthy
  
  worker:
    build: ./ecommerce-solutions
    command: celery -A ecs worker -l info
    volumes:
      - ./ecommerce-solutions/:/home/backend
    environment:
      - DEBUG
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      - redis
      
  scheduler:
    build: ./ecommerce-solutions
    command: celery -A ecs beat -l info
    volumes:
      - ./ecommerce-solutions/:/home/backend

  frontend_nginx:
    image: moriire/ecommerce-solutions:ecs_frontend_nginx
    ports:
      - 80:80
    volumes:
      - ./frontend/nginx/default.conf:/etc/nginx/conf.d/default.conf
    
    depends_on:
      - frontend

  frontend:
    image: moriire/ecommerce-solutions:ecs_frontend
    build: ./frontend
    ports:
      - 3000:80

    volumes:
      - ./frontend:/app
    depends_on:
      - ecs_web
    environment:
      - NODE_ENV=production
      - BACKEND_API_ENDPOINT=http://127.0.0.1/api/
      
  nginx_backend:
    build: ./ecommerce-solutions/nginx
    image: moriire/ecommerce-solutions:nginx_backend
    ports:
      - 8000:80
    volumes:
      - 'static_volume:/home/backend/staticfiles'
      - 'media_volume:/home/backend/mediafiles'
      
    depends_on:
      - ecs_web 
  ecs_db:
    image: moriire/ecommerce-solutions/ecs_database
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "ecs" ]
      interval: 5s
      timeout: 5s
      retries: 5
    
    ports:
      - "5432:5432"
    volumes:
      - 'db_data:/var/lib/postgresql/data/'
    
    environment:
      - POSTGRES_DB
      - POSTGRES_USER
      - POSTGRES_PASSWORD

  ecs_redis:
    restart: unless-stopped
    image: moriire/ecommerce-solutions/redis
    expose:
      - 6379
    
volumes:
  db_data:
  static_volume:
  media_volume: